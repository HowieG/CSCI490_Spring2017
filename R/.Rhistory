if(!exists("get_FRPM", mode="function")) {
source("get_FRPM.R")
}
FRPM_LA <- get_FRPM(schoolyear, All_LA_High_Schools$SchoolCode)
#merge rows whose SchoolCode in All_LA_High_Schools matches the desired SchoolCode in FRPM_LA
All_LA_High_Schools <- merge(All_LA_High_Schools, FRPM_LA, by="SchoolCode")
#add ethnicity data
if(!exists("get_enrollment", mode="function")) {
source("get_enrollment.R")
}
Enrollment_LA <- get_enrollment(schoolyear, All_LA_High_Schools$SchoolCode)
#add a CS courses count column
# #add computer science course names
# CourseEnrollment_ComputerCourses_LosAngeles <- merge(CourseEnrollment_ComputerCourses_LosAngeles, CourseAssignmentCodes_ComputerCourses, by="CourseCode")
#
return(All_LA_High_Schools)
}
get_enrollment <- function(schoolyear, SchoolCodes) {
#concatenate year to enrollment filename
Enrollment_filename <- paste("../Data/SchoolEnrollment/enr", schoolyear, ".txt", sep = "")
library(rio)
Enrollment_Data_Complete <- import(Enrollment_filename)
View(Enrollment_Data_Complete)
# #rename "School Code" to "SchoolCode" for consistency
# names(FRPM_Data_Complete)[names(FRPM_Data_Complete)=="School Code"] <- "SchoolCode"
#
# #keep only the rows whose CourseCode matches the desired SchoolCodes
# toGrab <- (FRPM_Data_Complete$SchoolCode %in% SchoolCodes)
#
# #put values list into data frame
# FRPM_Data <- FRPM_Data_Complete[toGrab,]
#
# #cleanup
# rm("toGrab")
#
# #keep only School Code, Enrollment total, Free Meal Count, Percent Eligible Free, FRPM count, Percent Eligible FRPM
# ##TODO: REPLACE COLUMN INDICES
#
# valid_years <- c(1213,1314,1415)
# case <- match(schoolyear,valid_years)
#
# columns_to_keep <- switch(case,
#                           columns_to_keep = c(4,13,14,15,16,17),
#                           columns_to_keep = c(4,13,15,16,18,19),
#                           columns_to_keep = c(4,18,19,20,21,22)
# )
#
# #rename income estimators for easier accessing
# names(FRPM_Data)[columns_to_keep[2]] <- "total_enrollment"
# names(FRPM_Data)[columns_to_keep[3]] <- "free_meal_eligible"
# names(FRPM_Data)[columns_to_keep[4]] <- "free_meal_eligible_percent"
# names(FRPM_Data)[columns_to_keep[5]] <- "FRPM_eligible"
# names(FRPM_Data)[columns_to_keep[6]] <- "FRPM_eligible_percent"
#
# FRPM_Data <- FRPM_Data[columns_to_keep]
#
return(Enrollment_Data_Complete)
}
datalist <- main()
install.packages("bit64")
get_enrollment <- function(schoolyear, SchoolCodes) {
#concatenate year to enrollment filename
Enrollment_filename <- paste("../Data/SchoolEnrollment/enr", schoolyear, ".txt", sep = "")
#install package to read 64 bit integers (for the CDS code)
#install.packages("bit64") #only install once
library(rio)
Enrollment_Data_Complete <- import(Enrollment_filename)
View(Enrollment_Data_Complete)
# #rename "School Code" to "SchoolCode" for consistency
# names(FRPM_Data_Complete)[names(FRPM_Data_Complete)=="School Code"] <- "SchoolCode"
#
# #keep only the rows whose CourseCode matches the desired SchoolCodes
# toGrab <- (FRPM_Data_Complete$SchoolCode %in% SchoolCodes)
#
# #put values list into data frame
# FRPM_Data <- FRPM_Data_Complete[toGrab,]
#
# #cleanup
# rm("toGrab")
#
# #keep only School Code, Enrollment total, Free Meal Count, Percent Eligible Free, FRPM count, Percent Eligible FRPM
# ##TODO: REPLACE COLUMN INDICES
#
# valid_years <- c(1213,1314,1415)
# case <- match(schoolyear,valid_years)
#
# columns_to_keep <- switch(case,
#                           columns_to_keep = c(4,13,14,15,16,17),
#                           columns_to_keep = c(4,13,15,16,18,19),
#                           columns_to_keep = c(4,18,19,20,21,22)
# )
#
# #rename income estimators for easier accessing
# names(FRPM_Data)[columns_to_keep[2]] <- "total_enrollment"
# names(FRPM_Data)[columns_to_keep[3]] <- "free_meal_eligible"
# names(FRPM_Data)[columns_to_keep[4]] <- "free_meal_eligible_percent"
# names(FRPM_Data)[columns_to_keep[5]] <- "FRPM_eligible"
# names(FRPM_Data)[columns_to_keep[6]] <- "FRPM_eligible_percent"
#
# FRPM_Data <- FRPM_Data[columns_to_keep]
#
return(Enrollment_Data_Complete)
}
View(Enrollment_Data_Complete)
datalist <- main()
get_enrollment <- function(schoolyear, SchoolCodes) {
#concatenate year to enrollment filename
Enrollment_filename <- paste("../Data/SchoolEnrollment/enr", schoolyear, ".txt", sep = "")
#install package to read 64 bit integers (for the CDS code)
#install.packages("bit64") #only install once
library(rio)
library(bit64)
Enrollment_Data_Complete <- import(Enrollment_filename)
View(Enrollment_Data_Complete)
# #rename "School Code" to "SchoolCode" for consistency
# names(FRPM_Data_Complete)[names(FRPM_Data_Complete)=="School Code"] <- "SchoolCode"
#
# #keep only the rows whose CourseCode matches the desired SchoolCodes
# toGrab <- (FRPM_Data_Complete$SchoolCode %in% SchoolCodes)
#
# #put values list into data frame
# FRPM_Data <- FRPM_Data_Complete[toGrab,]
#
# #cleanup
# rm("toGrab")
#
# #keep only School Code, Enrollment total, Free Meal Count, Percent Eligible Free, FRPM count, Percent Eligible FRPM
# ##TODO: REPLACE COLUMN INDICES
#
# valid_years <- c(1213,1314,1415)
# case <- match(schoolyear,valid_years)
#
# columns_to_keep <- switch(case,
#                           columns_to_keep = c(4,13,14,15,16,17),
#                           columns_to_keep = c(4,13,15,16,18,19),
#                           columns_to_keep = c(4,18,19,20,21,22)
# )
#
# #rename income estimators for easier accessing
# names(FRPM_Data)[columns_to_keep[2]] <- "total_enrollment"
# names(FRPM_Data)[columns_to_keep[3]] <- "free_meal_eligible"
# names(FRPM_Data)[columns_to_keep[4]] <- "free_meal_eligible_percent"
# names(FRPM_Data)[columns_to_keep[5]] <- "FRPM_eligible"
# names(FRPM_Data)[columns_to_keep[6]] <- "FRPM_eligible_percent"
#
# FRPM_Data <- FRPM_Data[columns_to_keep]
#
return(Enrollment_Data_Complete)
}
datalist <- main()
a <- 6547
as.numeric(strsplit(as.character(a), "")[[1]])
a <- 6547
as.numeric(strsplit(as.character(a), "")[[1]])[2]
as.integer(6547)
as.integer(strsplit(a))
as.integer(strsplit(a), "")
as.integer(strsplit(as.character(a), "")
f
a <- 6547
as.numeric(strsplit(as.character(a), "")[[1]])[2]
b <-  as.numeric(strsplit(as.character(a), "")[[1]])
b(8:14)
b[8:14]
a <- 12345678901234
b <-  as.numeric(strsplit(as.character(a), "")[[1]])
b[8:14]
get_enrollment <- function(schoolyear, SchoolCodes) {
#concatenate year to enrollment filename
Enrollment_filename <- paste("../Data/SchoolEnrollment/enr", schoolyear, ".txt", sep = "")
#install package to read 64 bit integers (for the CDS code)
#install.packages("bit64") #only install once
library(rio)
library(bit64)
Enrollment_Data_Complete <- import(Enrollment_filename)
#truncate CDS code to just the SchoolCode
CDS = Enrollment_Data_Complete$CDS_Code
CDS = as.numeric(strsplit(as.character(CDS), "")[[1]])
SchoolCode = CDS[8:14]
Enrollment_Data_Complete$CDS_Code = SchoolCode
#rename "CDS_Code" to "SchoolCode" for consistency
names(Enrollment_Data_Complete)[names(Enrollment_Data_Complete)=="CDS_Code"] <- "SchoolCode"
View(Enrollment_Data_Complete)
#
# #keep only the rows whose CourseCode matches the desired SchoolCodes
# toGrab <- (FRPM_Data_Complete$SchoolCode %in% SchoolCodes)
#
# #put values list into data frame
# FRPM_Data <- FRPM_Data_Complete[toGrab,]
#
# #cleanup
# rm("toGrab")
#
# #keep only School Code, Enrollment total, Free Meal Count, Percent Eligible Free, FRPM count, Percent Eligible FRPM
# ##TODO: REPLACE COLUMN INDICES
#
# valid_years <- c(1213,1314,1415)
# case <- match(schoolyear,valid_years)
#
# columns_to_keep <- switch(case,
#                           columns_to_keep = c(4,13,14,15,16,17),
#                           columns_to_keep = c(4,13,15,16,18,19),
#                           columns_to_keep = c(4,18,19,20,21,22)
# )
#
# #rename income estimators for easier accessing
# names(FRPM_Data)[columns_to_keep[2]] <- "total_enrollment"
# names(FRPM_Data)[columns_to_keep[3]] <- "free_meal_eligible"
# names(FRPM_Data)[columns_to_keep[4]] <- "free_meal_eligible_percent"
# names(FRPM_Data)[columns_to_keep[5]] <- "FRPM_eligible"
# names(FRPM_Data)[columns_to_keep[6]] <- "FRPM_eligible_percent"
#
# FRPM_Data <- FRPM_Data[columns_to_keep]
#
return(Enrollment_Data_Complete)
}
datalist <- main()
a = 12345678901234
b = as.numeric(strsplit(a), "")[[1]])
b = as.numeric(strsplit(a), "")[[1]]
b = as.numeric(strsplit(a, "")[[1]])
a[8:14]
b = as.numeric(strsplit(as.character(a), "")[[1]])
b
get_enrollment <- function(schoolyear, SchoolCodes) {
#concatenate year to enrollment filename
Enrollment_filename <- paste("../Data/SchoolEnrollment/enr", schoolyear, ".txt", sep = "")
#install package to read 64 bit integers (for the CDS code)
#install.packages("bit64") #only install once
library(rio)
library(bit64)
Enrollment_Data_Complete <- import(Enrollment_filename)
#truncate CDS code to just the SchoolCode
#CDS = Enrollment_Data_Complete$CDS_Code
for (i in nrow(CDS)) {
CDS = as.numeric(strsplit(as.character(Enrollment_Data_Complete[i, CDS_Code]), "")[[1]])
Enrollment_Data_Complete[i, CDS_Code] = CDS[8:14]
}
#rename "CDS_Code" to "SchoolCode" for consistency
names(Enrollment_Data_Complete)[names(Enrollment_Data_Complete)=="CDS_Code"] <- "SchoolCode"
View(Enrollment_Data_Complete)
#
# #keep only the rows whose CourseCode matches the desired SchoolCodes
# toGrab <- (FRPM_Data_Complete$SchoolCode %in% SchoolCodes)
#
# #put values list into data frame
# FRPM_Data <- FRPM_Data_Complete[toGrab,]
#
# #cleanup
# rm("toGrab")
#
# #keep only School Code, Enrollment total, Free Meal Count, Percent Eligible Free, FRPM count, Percent Eligible FRPM
# ##TODO: REPLACE COLUMN INDICES
#
# valid_years <- c(1213,1314,1415)
# case <- match(schoolyear,valid_years)
#
# columns_to_keep <- switch(case,
#                           columns_to_keep = c(4,13,14,15,16,17),
#                           columns_to_keep = c(4,13,15,16,18,19),
#                           columns_to_keep = c(4,18,19,20,21,22)
# )
#
# #rename income estimators for easier accessing
# names(FRPM_Data)[columns_to_keep[2]] <- "total_enrollment"
# names(FRPM_Data)[columns_to_keep[3]] <- "free_meal_eligible"
# names(FRPM_Data)[columns_to_keep[4]] <- "free_meal_eligible_percent"
# names(FRPM_Data)[columns_to_keep[5]] <- "FRPM_eligible"
# names(FRPM_Data)[columns_to_keep[6]] <- "FRPM_eligible_percent"
#
# FRPM_Data <- FRPM_Data[columns_to_keep]
#
return(Enrollment_Data_Complete)
}
datalist <- main()
get_enrollment <- function(schoolyear, SchoolCodes) {
#concatenate year to enrollment filename
Enrollment_filename <- paste("../Data/SchoolEnrollment/enr", schoolyear, ".txt", sep = "")
#install package to read 64 bit integers (for the CDS code)
#install.packages("bit64") #only install once
library(rio)
library(bit64)
Enrollment_Data_Complete <- import(Enrollment_filename)
#truncate CDS code to just the SchoolCode
CDS = Enrollment_Data_Complete$CDS_Code
for (i in nrow(CDS)) {
CDS = as.numeric(strsplit(as.character(Enrollment_Data_Complete[i, CDS_Code]), "")[[1]])
Enrollment_Data_Complete[i, CDS_Code] = CDS[8:14]
}
#rename "CDS_Code" to "SchoolCode" for consistency
names(Enrollment_Data_Complete)[names(Enrollment_Data_Complete)=="CDS_Code"] <- "SchoolCode"
View(Enrollment_Data_Complete)
#
# #keep only the rows whose CourseCode matches the desired SchoolCodes
# toGrab <- (FRPM_Data_Complete$SchoolCode %in% SchoolCodes)
#
# #put values list into data frame
# FRPM_Data <- FRPM_Data_Complete[toGrab,]
#
# #cleanup
# rm("toGrab")
#
# #keep only School Code, Enrollment total, Free Meal Count, Percent Eligible Free, FRPM count, Percent Eligible FRPM
# ##TODO: REPLACE COLUMN INDICES
#
# valid_years <- c(1213,1314,1415)
# case <- match(schoolyear,valid_years)
#
# columns_to_keep <- switch(case,
#                           columns_to_keep = c(4,13,14,15,16,17),
#                           columns_to_keep = c(4,13,15,16,18,19),
#                           columns_to_keep = c(4,18,19,20,21,22)
# )
#
# #rename income estimators for easier accessing
# names(FRPM_Data)[columns_to_keep[2]] <- "total_enrollment"
# names(FRPM_Data)[columns_to_keep[3]] <- "free_meal_eligible"
# names(FRPM_Data)[columns_to_keep[4]] <- "free_meal_eligible_percent"
# names(FRPM_Data)[columns_to_keep[5]] <- "FRPM_eligible"
# names(FRPM_Data)[columns_to_keep[6]] <- "FRPM_eligible_percent"
#
# FRPM_Data <- FRPM_Data[columns_to_keep]
#
return(Enrollment_Data_Complete)
}
datalist <- main()
get_enrollment <- function(schoolyear, SchoolCodes) {
#concatenate year to enrollment filename
Enrollment_filename <- paste("../Data/SchoolEnrollment/enr", schoolyear, ".txt", sep = "")
#install package to read 64 bit integers (for the CDS code)
#install.packages("bit64") #only install once
library(rio)
library(bit64)
Enrollment_Data_Complete <- import(Enrollment_filename)
#truncate CDS code to just the SchoolCode
for (i in nrow(Enrollment_Data_Complete$CDS_Code)) {
CDS = as.numeric(strsplit(as.character(Enrollment_Data_Complete[i, CDS_Code]), "")[[1]])
print(CDS)
Enrollment_Data_Complete[i, CDS_Code] = CDS[8:14]
print(Enrollment_Data_Complete[i, CDS_Code])
}
#rename "CDS_Code" to "SchoolCode" for consistency
names(Enrollment_Data_Complete)[names(Enrollment_Data_Complete)=="CDS_Code"] <- "SchoolCode"
View(Enrollment_Data_Complete)
#
# #keep only the rows whose CourseCode matches the desired SchoolCodes
# toGrab <- (FRPM_Data_Complete$SchoolCode %in% SchoolCodes)
#
# #put values list into data frame
# FRPM_Data <- FRPM_Data_Complete[toGrab,]
#
# #cleanup
# rm("toGrab")
#
# #keep only School Code, Enrollment total, Free Meal Count, Percent Eligible Free, FRPM count, Percent Eligible FRPM
# ##TODO: REPLACE COLUMN INDICES
#
# valid_years <- c(1213,1314,1415)
# case <- match(schoolyear,valid_years)
#
# columns_to_keep <- switch(case,
#                           columns_to_keep = c(4,13,14,15,16,17),
#                           columns_to_keep = c(4,13,15,16,18,19),
#                           columns_to_keep = c(4,18,19,20,21,22)
# )
#
# #rename income estimators for easier accessing
# names(FRPM_Data)[columns_to_keep[2]] <- "total_enrollment"
# names(FRPM_Data)[columns_to_keep[3]] <- "free_meal_eligible"
# names(FRPM_Data)[columns_to_keep[4]] <- "free_meal_eligible_percent"
# names(FRPM_Data)[columns_to_keep[5]] <- "FRPM_eligible"
# names(FRPM_Data)[columns_to_keep[6]] <- "FRPM_eligible_percent"
#
# FRPM_Data <- FRPM_Data[columns_to_keep]
#
return(Enrollment_Data_Complete)
}
datalist <- main()
get_school_info <- function(Course_Enrollment_File, schoolyear) {
#All post-2012 data uses this assignment code file
Assignment_Code_File <- "../Data/AssignmentCodes/AssignmentCodes12On.xls"
#this holds course names (AssignmentName) and course ID (AssignmentCode) for all tracked courses
library(readxl)
#setwd("~/Desktop/CSCI490/CSCI490_Spring2017/Data/AssignmentCodes")
All_Schools <- read_excel(Assignment_Code_File)
#open the Course Enrollment data (2014-2015)
#this holds schools, courses, and course enrollment by gender/ethnicity
#install.packages("rio") # Only install once
library(rio)
#setwd("~/Desktop/CSCI490/CSCI490_Spring2017/Data/CourseEnrollment")
All_Schools <- import(Course_Enrollment_File)
#make new data frame with only Computer courses
#columns: AssignmentCode, AssignmentName
#rename "AssignmentName" to "CourseName" for consistency
names(All_Schools)[names(All_Schools)=="AssignmentName"] <- "CourseName"
#rename "AssignmentCode" to "CourseCode" for consistency
names(All_Schools)[names(All_Schools)=="AssignmentCode"] <- "CourseCode"
#get rid of schools with GradeLevelCodes KN and US
All_Schools <- subset(All_Schools,  ! All_Schools$GradeLevelCode %in% c("KN", "US", "UE"))
#cast GradeLevelCode as int
All_Schools$GradeLevelCode <- as.integer(All_Schools$GradeLevelCode)
# #keep only high schools
All_High_Schools <- subset(All_Schools, GradeLevelCode > 8)
# #keep only Los Angeles schools
All_LA_High_Schools <- All_High_Schools[grep("LOS ANGELES", All_High_Schools$CountyName), ]
#remove unneeded columns
toDrop <- c("CountyName", "ClassID", "ClassCourseID", "FileCreated")
All_LA_High_Schools <- All_LA_High_Schools[ , !(names(All_LA_High_Schools) %in% toDrop)]
rm("toDrop")
#add FRPM data
if(!exists("get_FRPM", mode="function")) {
source("get_FRPM.R")
}
FRPM_LA <- get_FRPM(schoolyear, All_LA_High_Schools$SchoolCode)
#merge rows whose SchoolCode in All_LA_High_Schools matches the desired SchoolCode in FRPM_LA
All_LA_High_Schools <- merge(All_LA_High_Schools, FRPM_LA, by="SchoolCode")
#add ethnicity data
if(!exists("get_enrollment", mode="function")) {
source("get_enrollment.R")
}
Enrollment_LA <- get_enrollment(schoolyear, All_LA_High_Schools$SchoolCode)
#add a CS courses count column
# #add computer science course names
# CourseEnrollment_ComputerCourses_LosAngeles <- merge(CourseEnrollment_ComputerCourses_LosAngeles, CourseAssignmentCodes_ComputerCourses, by="CourseCode")
#
return(All_LA_High_Schools)
}
get_school_info <- function(Course_Enrollment_File, schoolyear) {
#All post-2012 data uses this assignment code file
Assignment_Code_File <- "../Data/AssignmentCodes/AssignmentCodes12On.xls"
#this holds course names (AssignmentName) and course ID (AssignmentCode) for all tracked courses
library(readxl)
#setwd("~/Desktop/CSCI490/CSCI490_Spring2017/Data/AssignmentCodes")
All_Schools <- read_excel(Assignment_Code_File)
#open the Course Enrollment data (2014-2015)
#this holds schools, courses, and course enrollment by gender/ethnicity
#install.packages("rio") # Only install once
library(rio)
#setwd("~/Desktop/CSCI490/CSCI490_Spring2017/Data/CourseEnrollment")
All_Schools <- import(Course_Enrollment_File)
#make new data frame with only Computer courses
#columns: AssignmentCode, AssignmentName
#rename "AssignmentName" to "CourseName" for consistency
names(All_Schools)[names(All_Schools)=="AssignmentName"] <- "CourseName"
#rename "AssignmentCode" to "CourseCode" for consistency
names(All_Schools)[names(All_Schools)=="AssignmentCode"] <- "CourseCode"
#get rid of schools with GradeLevelCodes KN and US
All_Schools <- subset(All_Schools,  ! All_Schools$GradeLevelCode %in% c("KN", "US", "UE"))
#cast GradeLevelCode as int
All_Schools$GradeLevelCode <- as.integer(All_Schools$GradeLevelCode)
# #keep only high schools
All_High_Schools <- subset(All_Schools, GradeLevelCode > 8)
# #keep only Los Angeles schools
All_LA_High_Schools <- All_High_Schools[grep("LOS ANGELES", All_High_Schools$CountyName), ]
#remove unneeded columns
toDrop <- c("CountyName", "ClassID", "ClassCourseID", "FileCreated")
All_LA_High_Schools <- All_LA_High_Schools[ , !(names(All_LA_High_Schools) %in% toDrop)]
rm("toDrop")
View(All_LA_High_Schools)
#add FRPM data
if(!exists("get_FRPM", mode="function")) {
source("get_FRPM.R")
}
FRPM_LA <- get_FRPM(schoolyear, All_LA_High_Schools$SchoolCode)
#merge rows whose SchoolCode in All_LA_High_Schools matches the desired SchoolCode in FRPM_LA
All_LA_High_Schools <- merge(All_LA_High_Schools, FRPM_LA, by="SchoolCode")
#add ethnicity data
if(!exists("get_enrollment", mode="function")) {
source("get_enrollment.R")
}
Enrollment_LA <- get_enrollment(schoolyear, All_LA_High_Schools$SchoolCode)
#add a CS courses count column
# #add computer science course names
# CourseEnrollment_ComputerCourses_LosAngeles <- merge(CourseEnrollment_ComputerCourses_LosAngeles, CourseAssignmentCodes_ComputerCourses, by="CourseCode")
#
return(All_LA_High_Schools)
}
datalist <- main()
get_FRPM <- function(schoolyear, SchoolCodes) {
#setwd("~/Desktop/CSCI490/CSCI490_Spring2017/Data")
FRPM_filename <- paste("../Data/FRPM/frpm", schoolyear, ".xls", sep = "")
#concatenate year to FRPM filename
library(readxl)
FRPM_Data_Complete <- read_excel(FRPM_filename, sheet = 2) # "2" gets second sheet, as the Excel data has 3 sheets.
#rename "School Code" to "SchoolCode" for consistency
names(FRPM_Data_Complete)[names(FRPM_Data_Complete)=="School Code"] <- "SchoolCode"
#keep only the rows whose CourseCode matches the desired SchoolCodes
toGrab <- (FRPM_Data_Complete$SchoolCode %in% SchoolCodes)
#put values list into data frame
FRPM_Data <- FRPM_Data_Complete[toGrab,]
#cleanup
rm("toGrab")
#keep only School Code, Enrollment total, Free Meal Count, Percent Eligible Free, FRPM count, Percent Eligible FRPM
##TODO: REPLACE COLUMN INDICES
valid_years <- c(1213,1314,1415)
case <- match(schoolyear,valid_years)
columns_to_keep <- switch(case,
columns_to_keep = c(4,13,14,15,16,17),
columns_to_keep = c(4,13,15,16,18,19),
columns_to_keep = c(4,18,19,20,21,22)
)
#rename income estimators for easier accessing
names(FRPM_Data)[columns_to_keep[2]] <- "total_enrollment"
names(FRPM_Data)[columns_to_keep[3]] <- "free_meal_eligible"
names(FRPM_Data)[columns_to_keep[4]] <- "free_meal_eligible_percent"
names(FRPM_Data)[columns_to_keep[5]] <- "FRPM_eligible"
names(FRPM_Data)[columns_to_keep[6]] <- "FRPM_eligible_percent"
FRPM_Data <- FRPM_Data[columns_to_keep]
View(FRPM_Data)
return(FRPM_Data)
}
datalist <- main()
