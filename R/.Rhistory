dbSendQuery(mydb, "drop table if exists schoolyears")
library(RMySQL)
library(dbConnect)
mydb = dbConnect(MySQL(), user='sql3162596', password='R1FkGaph13', dbname = "CSCI490_Live", host='sql3.freemysqlhosting.net	') # change localhost to server IP
mydb = dbConnect(MySQL(), user='root', password='south677', dbname = "CSCI490", host='localhost') # change localhost to server IP
dbListTables(mydb)
dbSendQuery(mydb, "drop table if exists schoolyears")
dbSendQuery(mydb, "
CREATE TABLE schoolyears (
schoolyear_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
schoolyear VARCHAR,
total_enrollment INT)")
dbSendQuery(mydb, "
CREATE TABLE schoolyears (
schoolyear_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
schoolyear VARCHAR(5),
total_enrollment INT)")
schoolyears <- c(8889,8990,9091,9192,9293,9394,9495,9596,9697,9798,9899,9900,0001,0102,
0203,0304,0405,0506,0607,0708,0809,0910,1011,1112,1213,1314,1415,1516)
for(schoolyear in schoolyears) {
#TODO FIX LEADING ZERO ISSUE
query = paste("INSERT INTO schoolyears (schoolyear) VALUES(", schoolyear, ")")
dbSendQuery(mydb, query)
}
for(schoolyear in schoolyears) {
#TODO FIX LEADING ZERO ISSUE
schoolyear
#query = paste("INSERT INTO schoolyears (schoolyear) VALUES(", schoolyear, ")")
#dbSendQuery(mydb, query)
}
for(schoolyear in schoolyears) {
#TODO FIX LEADING ZERO ISSUE
schoolyear
#query = paste("INSERT INTO schoolyears (schoolyear) VALUES(", schoolyear, ")")
#dbSendQuery(mydb, query)
}
for(schoolyear in schoolyears) {
#TODO FIX LEADING ZERO ISSUE
View(schoolyear)
#query = paste("INSERT INTO schoolyears (schoolyear) VALUES(", schoolyear, ")")
#dbSendQuery(mydb, query)
}
schoolyears[13]
schoolyears[12]
"schoolyears[13]"
dbSendQuery(mydb, "drop table if exists schoolyears")
dbSendQuery(mydb, "
CREATE TABLE schoolyears (
schoolyear_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
schoolyear VARCHAR(5),
total_enrollment INT)")
schoolyears <- c("8889","8990","9091","9192","9293","9394","9495","9596","9697","9798","9899","9900","0001","0102",
"0203","0304","0405","0506","0607","0708","0809","0910","1011","1112","1213","1314","1415","1516")
for(schoolyear in schoolyears) {
query = paste("INSERT INTO schoolyears (schoolyear) VALUES(", schoolyear, ")")
dbSendQuery(mydb, query)
}
schoolyears
schoolyears[13]
for(schoolyear in schoolyears) {
query = paste("INSERT INTO schoolyears (schoolyear) VALUES(", schoolyear, ")")
dbSendQuery(mydb, query)
}
dbSendQuery(mydb, "drop table if exists schoolyears")
dbSendQuery(mydb, "
CREATE TABLE schoolyears (
schoolyear_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
schoolyear VARCHAR(5),
total_enrollment INT)")
for(schoolyear in schoolyears) {
query = paste("INSERT INTO schoolyears (schoolyear) VALUES(", schoolyear, ")")
dbSendQuery(mydb, query)
}
for(schoolyear in schoolyears) {
query = paste("INSERT INTO schoolyears (schoolyear) VALUES('", schoolyear, "')")
dbSendQuery(mydb, query)
}
dbSendQuery(mydb, "drop table if exists schoolyears")
dbSendQuery(mydb, "
CREATE TABLE schoolyears (
schoolyear_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
schoolyear VARCHAR(5),
total_enrollment INT)")
for(schoolyear in schoolyears) {
query = paste("INSERT INTO schoolyears (schoolyear) VALUES('", schoolyear, "')")
dbSendQuery(mydb, query)
}
dbSendQuery(mydb, "drop table if exists grades")
dbSendQuery(mydb, "
CREATE TABLE gradelevels (
grade_level_id INT AUTO_INCREMENT PRIMARY KEY,
grade_level INT)")
grades <- c(6,7,8,9,10,11,12)
for(grade in grades) {
query = paste("INSERT INTO grades (grade) VALUES('", grade, "')")
dbSendQuery(mydb, query)
}
for(grade in grades) {
query = paste("INSERT INTO grade_levels (grade_level) VALUES('", grade, "')")
dbSendQuery(mydb, query)
}
for(grade in grades) {
query = paste("INSERT INTO grade_levels (grade_level) VALUES('", grade, "')")
dbSendQuery(mydb, query)
}
dbSendQuery(mydb, "drop table if exists gradelevels")
dbSendQuery(mydb, "
CREATE TABLE grade_levels (
grade_level_id INT AUTO_INCREMENT PRIMARY KEY,
grade_level INT)")
for(grade in grades) {
query = paste("INSERT INTO grade_levels (grade_level) VALUES('", grade, "')")
dbSendQuery(mydb, query)
}
dropTable() <- function(tablename) {
dropquery = paste("drop table if exists ", tablename)
dbSendQuery(mydb, dropquery)
}
dropTable(tablename) <- function() {
dropquery = paste("drop table if exists ", tablename)
dbSendQuery(mydb, dropquery)
}
dropTable <- function(tablename) {
dropquery = paste("drop table if exists ", tablename)
dbSendQuery(mydb, dropquery)
}
genders <- c("M", "F")
dropTable(genders)
dropTable <- function(tablename) {
dropquery = paste("drop table if exists ", tablename)
dropquery
dbSendQuery(mydb, dropquery)
}
dropTable(genders)
dropTable <- function(tablename) {
dropquery = paste("'drop table if exists ", tablename, "'")
dropquery
dbSendQuery(mydb, dropquery)
}
dropTable(genders)
dropTable <- function(tablename) {
dropquery = paste("drop table if exists ", tablename)
print(dropquery)
dbSendQuery(mydb, dropquery)
}
dropTable(genders)
rm(genders)
dropTable(genders)
dropTable("genders")
genders <- c("M", "F")
for(gender in genders) {
query = paste("INSERT INTO genders (gender) VALUES('", gender, "')")
dbSendQuery(mydb, query)
}
addSchoolyearsTable <- function() {
#stored as VARCHAR to keep leading zeroes!
dbSendQuery(mydb, "
CREATE TABLE schoolyears (
schoolyear_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
schoolyear VARCHAR(5),
total_enrollment INT)")
}
addDistrictsTable <- function() {
dbSendQuery(mydb, "
CREATE TABLE districts (
district_id INT AUTO_INCREMENT PRIMARY KEY,
district_code INT,
district_name VARCHAR(50))")
}
addSchoolsTable <- function() {
dbSendQuery(mydb, "
CREATE TABLE schools (
school_id INT AUTO_INCREMENT PRIMARY KEY,
school_code INT,
school_name VARCHAR(100))")
}
addCoursesTable <- function() {
dbSendQuery(mydb, "
CREATE TABLE courses (
course_id INT AUTO_INCREMENT PRIMARY KEY,
course_code INT,
course_name VARCHAR(100))")
}
addGradeLevelsTable <- function() {
dbSendQuery(mydb, "
CREATE TABLE grade_levels (
grade_level_id INT AUTO_INCREMENT PRIMARY KEY,
grade_level INT)")
}
addGendersTable <- function() {
dbSendQuery(mydb, "
CREATE TABLE genders (
gender_id INT AUTO_INCREMENT PRIMARY KEY,
gender VARCHAR(2))")
}
addEthnicitiesTable <- function() {
dbSendQuery(mydb, "
CREATE TABLE ethnicities (
ethnicity_id INT AUTO_INCREMENT PRIMARY KEY,
ethnicity VARCHAR(10))")
}
addIncomeEstimatorsTable <- function() {
dbSendQuery(mydb, "
CREATE TABLE income_estimators (
income_estimators_id INT AUTO_INCREMENT PRIMARY KEY,
free_meal_eligible INT,
free_meal_eligible_percent DECIMAL(10,9),
FRPM_eligible INT,
FRPM_eligible_percent DECIMAL(10,9))")
}
dropTable <- function(tablename) {
dropquery = paste("drop table if exists ", tablename)
print(dropquery)
dbSendQuery(mydb, dropquery)
}
addGendersTable()
schoolyear <- "1415"
get_all_school_info <- function(schoolyear) {
library(dplyr)
library(stringr)
library(readr)
#concatenate year with enrollment filename
Enrollment_filename = paste("../Data/SchoolEnrollment/enr", schoolyear, ".txt", sep = "")
#read in CDS_CODE as character so that we can later truncate it
Enrollment_Data_Complete <- read_delim(Enrollment_filename, col_types = list(CDS_CODE = col_character()), delim = "\t")
#truncate CDS code to just the SchoolCode
Enrollment_Data_Complete$CDS_CODE = str_sub(Enrollment_Data_Complete$CDS_CODE, start = 8, end = 14)
#rename CDS_CODE to SchoolCode
Enrollment_Data_Complete<-rename(Enrollment_Data_Complete, SchoolCode = CDS_CODE)
#rename SCHOOL to SchoolName
Enrollment_Data_Complete<-rename(Enrollment_Data_Complete, SchoolName = SCHOOL)
#rename ETHNIC to ethnicity
Enrollment_Data_Complete<-rename(Enrollment_Data_Complete, ethnicity = ETHNIC)
#rename GENDER to gender
Enrollment_Data_Complete<-rename(Enrollment_Data_Complete, gender = GENDER)
#rename ENR_TOTAL to enrolled
Enrollment_Data_Complete<-rename(Enrollment_Data_Complete, enrolled = ENR_TOTAL)
#keep only Los Angeles County schools
Enrollment_Data_Complete <- filter(Enrollment_Data_Complete, COUNTY == "Los Angeles")
#keep only high schools (KGDN...GR_8 = 0)
Enrollment_Data_Complete <- filter(Enrollment_Data_Complete, KDGN == 0, GR_1 == 0, GR_2 == 0, GR_3 == 0, GR_4 == 0, GR_5 == 0, GR_6 == 0, GR_7 == 0, GR_8 == 0, UNGR_ELM == 0, enrolled > 0)
#remove invalid data
Enrollment_Data_Complete <- filter(Enrollment_Data_Complete, SchoolCode != "0000000", SchoolCode != "0000001")
#remove extraneous columns
Enrollment_Data_Complete <- select(Enrollment_Data_Complete, 1,4,5,6,22)
############################# IMPORTANT #############################
#ethinicity codes in CALPADS are in zero-based but MySQL is one-based so add 1 to each ethnicity code
#EXCEPT FOR "Code 9 = Two or More Races, Not Hispanic" because they skip Code 8, making this one ok
Enrollment_Data_Complete$ethnicity[Enrollment_Data_Complete$ethnicity == 9] = 8
Enrollment_Data_Complete$ethnicity = Enrollment_Data_Complete$ethnicity + 1
View(Enrollment_Data_Complete)
}
get_all_school_info('1415')
getwd()
setwd("/Users/howardgil/Desktop/CSCI490/CSCI490_Spring2017/R")
get_all_school_info('1415')
